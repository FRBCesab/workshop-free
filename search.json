{
  "articles": [
    {
      "path": "index.html",
      "title": "Functional Rarity and Diversity in Ecology",
      "description": "FRB-CESAB & FREE Working Group Workshop",
      "author": [
        {
          "name": "Nicolas Casajus",
          "url": "https://nicolascasajus.fr"
        },
        {
          "name": "Mathias Grénié",
          "url": "https://rekyt.github.io/"
        },
        {
          "name": "Camille Magneville",
          "url": "https://umr-marbec.fr/membre/camille-magneville/"
        },
        {
          "name": "Sébastien Villéger",
          "url": "https://umr-marbec.fr/membre/sebastien-villeger/"
        }
      ],
      "date": "`r format(Sys.Date(), '%m-%d-%Y')`",
      "contents": "\r\n[banner]\r\n\r\nThe objective of this three-hours workshop, co-organized by …\r\n\r\nProgram\r\nComing soon…\r\n\r\nPrerequisites\r\nThe following software must be installed before the workshop: R (latest version), RStudio et git. Follow this tutorial to install your working environment.\r\nCorrections\r\nIf you see mistakes or want to suggest changes, please Create an issue on the source repository.\r\nReuse\r\nThe material of this website is licensed under Creative Commons Attribution CC BY 4.0. Source code is available at https://github.com/frbcesab/workshop-free/.\r\nCitation\r\nCasajus N, Grénié M, Magneville C & Villéger S (2022) Workshop FRB-CESAB & FREE Working Group: Functional Rarity and Diversity in Ecology.\r\n\r\n\r\n\r\n",
      "last_modified": "2022-03-31T10:34:46+02:00"
    },
    {
      "path": "instructions.html",
      "title": "Installation of R, RStudio and git",
      "author": [],
      "contents": "\r\n\r\nContents\r\nInstallation\r\n  Windows\r\n  macOS\r\n Ubuntu\r\n\r\nConfiguration\r\ngit\r\n GitHub SSH keys\r\n GitHub PAT\r\n\r\nCorrections\r\nReuse\r\nCitation\r\n\r\nPlease install the latest versions of , RStudio, and git.\r\n Having an up-to-date environment is the first good practice.\r\n\r\nInstallation\r\n  Windows\r\nDownload  at:https://cran.r-project.org/\r\n         Click on Download R for Windows          Click on base          Click on Download R 4.1.2 for Windows          Open R-4.1.2-win.exe and follow instructions\r\n\r\nDownload RStudio Desktop at:https://www.rstudio.com/products/rstudio/download/#download\r\n         Download the version for Windows 10 (the .exe and not the .zip)          Open RStudio-2021.09.0-351.exe and follow instructions          Check if RStudio has found . Launch RStudio and run:\r\n\r\n\r\nR.version.string\r\n## [1] \"R version 4.1.2 (2021-11-01)\"\r\n\r\n\r\n\r\n\r\nDownload git at:https://git-scm.com/downloads\r\n         Download the 64-bit version for Windows          Open Git-2.33.1-64-bit.exe and follow instructions          Check if RStudio has found git. Launch RStudio and run:\r\n\r\n\r\nSys.which(\"git\")\r\n## C:/Program Files/Git/bin/git.exe\r\n\r\n\r\n\r\n\r\nDownload Rtools4 at:https://cran.r-project.org/bin/windows/Rtools/\r\n         Download the 64-bit version for Windows          Open rtools40v2-x86_64.exe and follow instructions\r\nThe installation of Rtools4 is optional, but this software is required to install packages (from sources) containing compiled code (C/C++/Fortran). Rtools4 contains in particular the utility make.\r\n         Once Rtools4 is installed, you need to tell  where to find Rtools4 utilities. Open RStudio et run:\r\n\r\n\r\ncat(\"PATH='${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}'\\r\\n\", file = \"~/.Renviron\", append = TRUE)\r\n\r\n\r\n\r\nAn hidden file .Renviron has been created (or modified) in you personal folder and contains the line PATH='${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}' (the path to Rtools4). At each start  will read this file.\r\nRestart RStudio and check that  find make:\r\n\r\n\r\nSys.which(\"make\")\r\n## \"C:/rtools40/usr/bin/make.exe\"\r\n\r\n\r\n\r\nNow you can install packages from sources:\r\n\r\n\r\ninstall.packages(\"jsonlite\", type = \"source\")\r\n\r\n\r\n\r\n\r\nInstall pandoc\r\nThe package rmarkdown requires the software pandoc to convert document from one format (e.g. .Rmd) to another (e.g. .html).\r\nDownload pandoc at: https://github.com/jgm/pandoc/releases/tag/2.16.1, and follow instructions.\r\n\r\nInstall a LaTeX distribution\r\nIf you want to convert documents from .Rmd to .pdf, you will need LaTeX. You can install a lightened distribution using the  package tinytex. Open RStudio and run:\r\n\r\n\r\n## Install tinytex ----\r\ninstall.packages(\"tinytex\")\r\n\r\n## Install LaTeX ----\r\ntinytex::install_tinytex()\r\n\r\n\r\n\r\nN.B. If you already have a LaTeX distribution, do not install tinytex.\r\n\r\n  macOS\r\nTh easiest way to set up your environment is by using the package manager for macOS Homebrew. With this tool you can install (and update) your software directly from the terminal. First you need to install the Apple software Command Line Tools for Xcode.\r\nOpen a terminal, run this line and accept the license:\r\n## Install Xcode Command Line Tools ----\r\nsudo xcode-select --install\r\nThen you can install Homebrew:\r\n## Install Homebrew ----\r\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\r\n\r\n## Check installation ----\r\nbrew --version\r\n## Homebrew 3.3.8\r\n\r\n## Update repositories (list of available software) ----\r\nbrew update\r\nFollow these lines to install your environment:\r\n## Install utilities for R ----\r\nbrew install --cask xquartz     ## Graphical window system\r\nbrew install gfortran           ## FORTRAN compiler for GCC\r\n\r\n## Install R ----\r\nbrew install --cask r\r\n\r\n## Install RStudio Desktop ----\r\nbrew install --cask rstudio\r\n\r\n## Install git ----\r\nbrew install git\r\n\r\n## Install pandoc ----\r\nbrew install pandoc             ## Convert documents (Rmd, html, etc.)\r\nOpen RStudio and check your installation:\r\n\r\n\r\nR.version.string\r\n## \"R version 4.1.2 (2021-11-01)\"\r\n\r\nSys.which(\"git\")\r\n##            git\r\n## \"/usr/bin/git\"\r\n\r\nSys.which(\"make\")\r\n##            make \r\n## \"/usr/bin/make\"\r\n\r\nSys.which(\"pandoc\")\r\n##            pandoc \r\n## \"/usr/local/bin/pandoc\"\r\n\r\n\r\n\r\n\r\nIf you want to convert documents from .Rmd to .pdf, you will need LaTeX. You can install a lightened distribution using the  package tinytex. Open RStudio and run:\r\n\r\n\r\n## Install tinytex ----\r\ninstall.packages(\"tinytex\")\r\n\r\n## Install LaTeX ----\r\ntinytex::install_tinytex()\r\n\r\n\r\n\r\n\r\n   Congrats! You have successfully install your environment. The following commands will install system libraries (software) required by some  packages (sf, sp, rgdal, rgeos, raster, terra, xml, etc.).\r\n## Install other utilities for R (spatial and others) ----\r\nbrew install libgit2 \r\nbrew install libxml2 \r\nbrew install poppler \r\nbrew install geos gdal netcdf proj udunits\r\nTo keep your system up-to-date run frequently:\r\n## Update environment ----\r\nbrew update && brew upgrade --greedy\r\n\r\n Ubuntu\r\nTo keep your system up-to-date, do not forget to frequently run:\r\n## System update ----\r\nsudo apt update && sudo apt upgrade\r\n\r\nThen check your version of Ubuntu:\r\n## Check Ubuntu version ----\r\ncat /etc/issue\r\n## Ubuntu 20.04 LTS\r\n\r\nTable 1. List of CRAN repositories for different versions of Ubuntu\r\nRelease\r\nRelease name\r\nRepository URL\r\n21.04\r\nHirsute Hippo\r\nhttps://cloud.r-project.org/bin/linux/ubuntu hirsute-cran40/\r\n20.10\r\nGroovy Gorilla\r\nhttps://cloud.r-project.org/bin/linux/ubuntu groovy-cran40/\r\n20.04 LTS\r\nFocal Fossa\r\nhttps://cloud.r-project.org/bin/linux/ubuntu focal-cran40/\r\n18.04 LTS\r\nBionic Beaver\r\nhttps://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/\r\n16.04 LTS\r\nXenial Xerus\r\nhttps://cloud.r-project.org/bin/linux/ubuntu xenial-cran40/\r\n\r\nInstall  by following these steps (change the URL below by the one specific to your version of Ubuntu, cf. Table 1) :\r\n## Install APT utilities ----\r\nsudo apt install software-properties-common\r\n\r\n## Add CRAN GPG key ----\r\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\r\n\r\n## Add CRAN repository to APT repositories list ----\r\nsudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'\r\n\r\n## Update packages list ----\r\nsudo apt update\r\n\r\n## Install R ----\r\nsudo apt install r-base\r\n\r\n## Install R (for development, recommended) ----\r\nsudo apt install build-essential\r\nsudo apt install r-base-dev\r\n\r\nTo install RStudio Desktop visit this page: https://www.rstudio.com/products/rstudio/download/#download, download the .deb file for Ubuntu 18/Debian 10 et install it. If you have an older version of Ubuntu (16.04), visit this page: https://www.rstudio.com/products/rstudio/older-versions/\r\nAlternatively, you can install RStudio Desktop from the terminal:\r\n## Install wget utility ----\r\nsudo apt install wget\r\n\r\n## Download RStudio Desktop installer (Ubuntu >= 18.04) ----\r\nwget https://download1.rstudio.org/desktop/bionic/amd64/rstudio-2021.09.0-351-amd64.deb\r\n\r\n## Download RStudio Desktop installer (Ubuntu 16.04 only) ----\r\n# wget https://download1.rstudio.org/desktop/xenial/amd64/rstudio-1.4.1106-amd64.deb\r\n\r\n## Install RStudio Desktop ----\r\nsudo dpkg -i rstudio-2021.09.0-351-amd64.deb\r\n# sudo dpkg -i rstudio-1.4.1106-amd64.deb\r\n\r\n## Remove installer ----\r\nrm rstudio-2021.09.0-351-amd64.deb\r\n# rm rstudio-1.4.1106-amd64.deb\r\n\r\nNow let’s install git:\r\nsudo apt install git\r\nFinally, install pandoc (to convert documents using rmarkdown):\r\nsudo apt install pandoc\r\n\r\nOpen RStudio and check your installation:\r\n\r\n\r\nR.version.string\r\n## \"R version 4.1.2 (2021-11-01)\"\r\n\r\nSys.which(\"git\")\r\n##            git\r\n## \"/usr/bin/git\"\r\n\r\nSys.which(\"make\")\r\n##            make \r\n## \"/usr/bin/make\"\r\n\r\nSys.which(\"pandoc\")\r\n##            pandoc \r\n## \"/usr/bin/pandoc\"\r\n\r\n\r\n\r\n\r\nIf you want to convert documents from .Rmd to .pdf, you will need LaTeX. You can install a lightened distribution using the  package tinytex. Open RStudio and run:\r\n\r\n\r\n## Install tinytex ----\r\ninstall.packages(\"tinytex\")\r\n\r\n## Install LaTeX ----\r\ntinytex::install_tinytex()\r\n\r\n\r\n\r\n\r\n   Congrats! You have successfully install your environment. The following commands will install system libraries (software) required by some  packages (sf, sp, rgdal, rgeos, raster, terra, xml, etc.).\r\n## Install other utilities for R (spatial and others) ----\r\nsudo apt install libgdal-dev libproj-dev libgeos-dev libudunits2-dev libnetcdf-dev\r\nsudo apt install libcairo2-dev libmagick++-dev\r\nsudo apt install libpoppler-cpp-dev\r\nTo keep your system up-to-date, do not forget to frequently run:\r\n## Update system ----\r\nsudo apt update && sudo apt upgrade\r\n\r\nConfiguration\r\ngit\r\nTo use git, you need to store your credentials (user name and email) that will be added to all your commits. Open a terminal (you can use the terminal of RStudio) and run:\r\ngit config --global user.name  \"Jane Doe\"\r\ngit config --global user.email \"jane.doe@mail.com\"\r\nWhen you create a new git project the default branch will be named master. It’s recommended to replace master by main (for more information read this article).\r\nOn a terminal, run:\r\ngit config --global init.defaultBranch \"main\"\r\nFrom now when you will initialize git in a new project the default branch will be main.\r\n\r\n GitHub SSH keys\r\nTo communicate with GitHub, you can use the protocol HTTPS (default) or the protocol SSH (recommended). The protocol SSH is a more secure method of logging into a remote server (GitHub). To use this protocol, you need to generate an SSH keys pair that consists in creating two long strings of characters: a public key and a private key. You can place the public key on any server (for instance GitHub), and then connect to the server using a device (your laptop) that has access to the private key.\r\nTo generate a new SSH keys pair proceed as follow:\r\n     Create an account on GitHub at https://github.com/signup      Open RStudio and click on: Tools > Global options > Git/SVN      Click on Create RSA Key and then click on Create (you can omit the passphrase). This new SSH keys pair has been stored in ~/.ssh/.      Click on View public key and copy it      Go to the page https://github.com/settings/keys and click on New SSH key      Choose a name for your key (e.g. your laptop name) and paste your public key.      Finally click on Add SSH key\r\n\r\n   If you are on Ubuntu you need to install the following utility:\r\nsudo apt install ssh-askpass\r\n\r\nLet’s test the SSH connection with GitHub. Open a terminal and run (you need to accept the fingerprint, just enter yes):\r\nssh -T git@github.com\r\nCongrats! You can now communicate with GitHub using the SSH protocol.\r\n\r\n   From now, you need to use the SSH URL when connecting a new GitHub project (named remote).\r\n## URL HTTPS ----\r\nhttps://github.com/frbcesab/datatoolbox.git\r\n\r\n## URL SSH (use this one) ----\r\ngit@github.com:frbcesab/datatoolbox.git\r\n\r\n   If you lose your private SSH key you won’t be able to establish a connection with GitHub. You’ll need to delete your SSH key on GitHub and to create a new one.\r\n\r\n GitHub PAT\r\nIf you want to use the GitHub API, essentially with the  package usethis, you need to create a GitHub Personal Access Token (PAT).\r\nGo to https://github.com/settings/tokens\r\n     Click on Generate new token      Choose a name for your new token (e.g. your laptop name)      In the section scopes, select at least repo and workflow      Copy this token.\r\nThen open RStudio and run:\r\n\r\n\r\n## Install usethis package ----\r\ninstall.packages(\"usethis\")\r\n\r\n## Open ~/.Renviron file ----\r\nusethis::edit_r_environ()\r\n## • Modify '~/.Renviron'\r\n## • Restart R for changes to take effect\r\n\r\n\r\n\r\nIn the ~/.Renviron file, add this new line: GITHUB_PAT='XXX' where XXX is your token. Do not forget to restart .\r\n\r\nFinally let’s tell usethis to use the SSH protocol. Open RStudio and run:\r\n\r\n\r\n## Install usethis package ----\r\ninstall.packages(\"usethis\")\r\n\r\n## Open ~/.Rprofile file ----\r\nusethis::edit_r_profile()\r\n## • Modify '~/.Rprofile'\r\n## • Restart R for changes to take effect\r\n\r\n\r\n\r\nIn the ~/.Rprofile file, add this new line: options(usethis.protocol = \"ssh\"). Do not forget to restart .\r\nCorrections\r\nIf you see mistakes or want to suggest changes, please Create an issue on the source repository.\r\nReuse\r\nThe material of this website is licensed under Creative Commons Attribution CC BY 4.0. Source code is available at https://github.com/rdatatoolbox/rdatatoolbox.github.io/.\r\nCitation\r\nCasajus N, Dray S, Gimenez O, Guéry L, Guilhaumon F & Schiettekatte NMD (2021) Workshop FRB-CESAB & GdR EcoStat: Data Toolbox for Reproducible Research in Ecology (Edition 2021). Zenodo. http://doi.org/10.5281/zenodo.4262978.\r\n\r\n\r\n\r\n",
      "last_modified": "2022-03-31T10:34:51+02:00"
    },
    {
      "path": "practice.html",
      "title": "Practice - FREE Workshop",
      "author": [],
      "contents": "\r\n\r\nContents\r\nAbout this practice\r\n\r\nAbout this practice\r\n\r\nThis tutorial describes the basic workflow showing how to compute step by step functional diversity (FD) indices in a multidimensional space. It is divided in four parts:\r\n1 - Compute trait-based distances & the multidimensional functional space\r\n2 - Using the mFD package to compute FD alpha and beta indices and plot them (Magneville et al. 2021)\r\n3 - Using the funrar package to compute Functional Rarity indices (Violle et al. 2017)\r\n4 - Using the funbiogeo package to computes analyses in functional biogeography (Violle et al. 2014)\r\n\r\n\r\n\r\n",
      "last_modified": "2022-03-31T10:34:54+02:00"
    }
  ],
  "collections": []
}
